"""Initial migration with improvements

Revision ID: 0ea32740f69b
Revises: 
Create Date: 2025-08-11 16:45:53.497669

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0ea32740f69b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create people table
    op.create_table('people',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=120), nullable=False),
        sa.Column('gender', sa.String(length=20), nullable=False),
        sa.Column('birth_year', sa.String(length=20), nullable=False),
        sa.Column('image_url', sa.String(length=500), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), onupdate=sa.text('CURRENT_TIMESTAMP'), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    # Add index for name searches
    op.create_index('ix_people_name', 'people', ['name'])
    
    # Create planet table
    op.create_table('planet',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=120), nullable=False),
        sa.Column('climate', sa.String(length=120), nullable=False),
        sa.Column('population', sa.String(length=120), nullable=False),
        sa.Column('image_url', sa.String(length=500), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), onupdate=sa.text('CURRENT_TIMESTAMP'), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    # Add index for name searches
    op.create_index('ix_planet_name', 'planet', ['name'])
    
    # Create role table
    op.create_table('role',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=80), nullable=False),
        sa.Column('description', sa.String(length=255), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), onupdate=sa.text('CURRENT_TIMESTAMP'), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    
    # Create user table
    op.create_table('user',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('email', sa.String(length=120), nullable=False),
        sa.Column('password', sa.String(), nullable=False),
        sa.Column('active', sa.Boolean(), nullable=False, server_default=sa.text('true')),
        sa.Column('fs_uniquifier', sa.String(length=64), nullable=False),
        sa.Column('confirmed_at', sa.DateTime(), nullable=True),
        sa.Column('last_login_at', sa.DateTime(), nullable=True),
        sa.Column('current_login_at', sa.DateTime(), nullable=True),
        sa.Column('login_count', sa.Integer(), nullable=True, server_default=sa.text('0')),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), onupdate=sa.text('CURRENT_TIMESTAMP'), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
        sa.UniqueConstraint('fs_uniquifier')
    )
    # Add index for email lookups
    op.create_index('ix_user_email', 'user', ['email'])
    op.create_index('ix_user_active', 'user', ['active'])
    
    # Create vehicle table
    op.create_table('vehicle',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=120), nullable=False),
        sa.Column('model', sa.String(length=120), nullable=False),
        sa.Column('manufacturer', sa.String(length=120), nullable=False),
        sa.Column('image_url', sa.String(length=500), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), onupdate=sa.text('CURRENT_TIMESTAMP'), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    # Add indexes for common searches
    op.create_index('ix_vehicle_name', 'vehicle', ['name'])
    op.create_index('ix_vehicle_manufacturer', 'vehicle', ['manufacturer'])
    
    # Create favorite table with proper constraints
    op.create_table('favorite',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('people_id', sa.Integer(), nullable=True),
        sa.Column('planet_id', sa.Integer(), nullable=True),
        sa.Column('vehicle_id', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
        sa.ForeignKeyConstraint(['people_id'], ['people.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['planet_id'], ['planet.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['vehicle_id'], ['vehicle.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        # Ensure only one favorite type per record
        sa.CheckConstraint(
            '(CASE WHEN people_id IS NOT NULL THEN 1 ELSE 0 END + '
            'CASE WHEN planet_id IS NOT NULL THEN 1 ELSE 0 END + '
            'CASE WHEN vehicle_id IS NOT NULL THEN 1 ELSE 0 END) = 1',
            name='favorite_single_type_check'
        )
    )
    # Add indexes for efficient lookups
    op.create_index('ix_favorite_user_id', 'favorite', ['user_id'])
    op.create_index('ix_favorite_people_id', 'favorite', ['people_id'])
    op.create_index('ix_favorite_planet_id', 'favorite', ['planet_id'])
    op.create_index('ix_favorite_vehicle_id', 'favorite', ['vehicle_id'])
    
    # Ensure no duplicate favorites for same user-item combination
    op.create_index('ix_favorite_user_people_unique', 'favorite', ['user_id', 'people_id'], unique=True, postgresql_where=sa.text('people_id IS NOT NULL'))
    op.create_index('ix_favorite_user_planet_unique', 'favorite', ['user_id', 'planet_id'], unique=True, postgresql_where=sa.text('planet_id IS NOT NULL'))
    op.create_index('ix_favorite_user_vehicle_unique', 'favorite', ['user_id', 'vehicle_id'], unique=True, postgresql_where=sa.text('vehicle_id IS NOT NULL'))
    
    # Create many-to-many table for user roles
    op.create_table('roles_users',
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('role_id', sa.Integer(), nullable=False),
        sa.Column('assigned_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
        sa.ForeignKeyConstraint(['role_id'], ['role.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    
    # Insert default roles
    op.execute("""
        INSERT INTO role (name, description) VALUES 
        ('admin', 'Administrator with full access'),
        ('user', 'Standard user with basic access')
    """)
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop indexes first
    op.drop_index('ix_favorite_user_vehicle_unique', 'favorite')
    op.drop_index('ix_favorite_user_planet_unique', 'favorite')
    op.drop_index('ix_favorite_user_people_unique', 'favorite')
    op.drop_index('ix_favorite_vehicle_id', 'favorite')
    op.drop_index('ix_favorite_planet_id', 'favorite')
    op.drop_index('ix_favorite_people_id', 'favorite')
    op.drop_index('ix_favorite_user_id', 'favorite')
    
    op.drop_index('ix_vehicle_manufacturer', 'vehicle')
    op.drop_index('ix_vehicle_name', 'vehicle')
    
    op.drop_index('ix_user_active', 'user')
    op.drop_index('ix_user_email', 'user')
    
    op.drop_index('ix_planet_name', 'planet')
    op.drop_index('ix_people_name', 'people')
    
    # Drop tables in reverse order
    op.drop_table('roles_users')
    op.drop_table('favorite')
    op.drop_table('vehicle')
    op.drop_table('user')
    op.drop_table('role')
    op.drop_table('planet')
    op.drop_table('people')
    
    # ### end Alembic commands ###